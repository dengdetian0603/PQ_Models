setwd("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code")
source("./PerchDataSimulation.R")
source("./ModelFittingVB.R")
source("../../BAKER/utils.R")
Rcpp::sourceCpp('VBEM_Regression.cpp')
par.default = SetDefaultSimulationParameter(9)
par.default$ncase = 1000
par.default$nctrl = 1000
par.default$num.covariates = 1
par.default$has.interact = FALSE
par.default$Betas = c(-0.1, -0.3, 0.4, -0.5, 0.2)
par.default$theta2.value = -1.5
par.default$theta2.pind = 0.8
par.default$Pi.seed = c(0.1, 0.7, 0.15, 0.05 - 1e-2 - 1e-3,
1e-2, 1e-3)
hyper.pars.list = SetVBHyperParameters(K = 5)
hyper.pars.list$aa = rep(25.22, 5)
hyper.pars.list$bb = rep(4.56, 5)
hyper.pars.list$cc = 38.1
hyper.pars.list$dd = 2.4
hyper.pars.list$rho_mu = -1
hyper.pars.list$rho_tau = 2
hyper.pars.list$theta_mu = rep(0, 5)
set.seed(603)
sim.obj = do.call(SimulatePerchData, par.default)
round(sim.obj$pars.baseline$Mu[1, ], 4)
round(sim.obj$pars.baseline$Pi[1, ], 4)
sim.dat = do.call(ReSimulateData,
c(par.default,
list(cell.prob.unique = sim.obj$cell.prob.unique)))
setwd("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code")
source("./PerchDataSimulation.R")
source("./ModelFittingVB.R")
source("../../BAKER/utils.R")
Rcpp::sourceCpp('VBEM_Regression.cpp')
# high-quality data
par.default = SetDefaultSimulationParameter(9)
par.default$ncase = 1000
par.default$nctrl = 1000
par.default$num.covariates = 1
par.default$has.interact = FALSE
par.default$Betas = c(-0.1, -0.3, 0.4, -0.5, 0.2)
par.default$theta2.value = -1.5
par.default$theta2.pind = 0.8
par.default$Pi.seed = c(0.1, 0.7, 0.15, 0.05 - 1e-2 - 1e-3,
1e-2, 1e-3)
hyper.pars.list = SetVBHyperParameters(K = 5)
hyper.pars.list$aa = rep(25.22, 5)
hyper.pars.list$bb = rep(4.56, 5)
hyper.pars.list$cc = 38.1
hyper.pars.list$dd = 2.4
hyper.pars.list$rho_mu = -1
hyper.pars.list$rho_tau = 2
hyper.pars.list$theta_mu = rep(0, 5)
set.seed(603)
sim.obj = do.call(SimulatePerchData, par.default)
round(sim.obj$pars.baseline$Mu[1, ], 4)
round(sim.obj$pars.baseline$Pi[1, ], 4)
sim.dat = do.call(ReSimulateData,
c(par.default,
list(cell.prob.unique = sim.obj$cell.prob.unique)))
group0 = which(rowSums(sim.dat$X) > 0)
input.obj = list(MSS.case = sim.dat$MSS.case[group0, ],
MBS.case = sim.dat$MBS.case[group0, ],
MBS.ctrl = sim.dat$MBS.ctrl,
X = sim.dat$X[group0, ],
ss.available = 1:5, bs.available = 1:5)
par.list = SetVBInitialValues(5, input.obj, hyper.pars.list)
t0 = proc.time()
res = regVBEM(input.obj, hyper.pars.list, par.list,
maxIter = 300, tol = 5 * 1e-6, 2)
proc.time() - t0
class(input.obj$MSS.case)
class(input.obj$MBS.case)
class(input.obj$X)
input.obj
class(input.obj$X)
hyper.pars.list
hyper.pars.list$theta_mu = rbind(rep(0, 5))
par.list = SetVBInitialValues(5, input.obj, hyper.pars.list)
t0 = proc.time()
res = regVBEM(input.obj, hyper.pars.list, par.list,
maxIter = 300, tol = 5 * 1e-6, 2)
proc.time() - t0
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/./ModelFittingVB.R')
hyper.pars.list$theta_mu = matrix(0, nrow = ncol(input.obj$X),
ncol = ncol(input.obj$MBS.case))
par.list = SetVBInitialValues(5, input.obj, hyper.pars.list)
par.list
t0 = proc.time()
res = regVBEM(input.obj, hyper.pars.list, par.list,
maxIter = 300, tol = 5 * 1e-6, 2)
proc.time() - t0
uniquecombs(input.obj$X)
uniquecombs(input.obj$X) %*% res$Beta.mean
res$Rho.mean
res$mu_theta = uniquecombs(input.obj$X) %*% res$Beta.mean
res$mu_rho = res$Rho.mean
res$mu_theta
res$mu_rho
round(res$mu_rho * res$qD, 3)
res$Beta.mean
hyper.pars.list$rho_mu = -4
hyper.pars.list$rho_tau = 8
hyper.pars.list
par.list = SetVBInitialValues(5, input.obj, hyper.pars.list)
t0 = proc.time()
res = regVBEM(input.obj, hyper.pars.list, par.list,
maxIter = 300, tol = 5 * 1e-6, 2)
proc.time() - t0
res$mu_theta = uniquecombs(input.obj$X) %*% res$Beta.mean
res$mu_rho = res$Rho.mean
# -----------------------------------------------------------------------------
res$mu_theta
res$mu_rho
round(res$mu_rho * res$qD, 3)
DesignMatrixAppxQuadExp(10, 2)
DesignMatrixAppxQuadExp(15, 2)
DesignMatrixAppxQuadExp(20, 2)
DesignMatrixAppxQuadExp(22, 2)
DesignMatrixAppxQuadExp(25, 2)
DesignMatrixAppxQuadExp(28, 2)
DesignMatrixAppxQuadExp(30, 2)
choose(30, 3)
K = Smax = 5
design.mat = DesignMatrixAppxQuadExp(K, Smax)
Lall = rbind(rep(0, K), design.mat$Lmat)
i=1
Lall %*% par.list$mu_theta[i, ]
list(a=1,b=2)
ablist(a=1,b=2)
ab = ablist(a=1,b=2)
ab = list(a=1,b=2)
c = list(c = 4)
c(ab, c)
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/./ModelFittingVB.R')
res$mu_theta
res$mu_rho
etio.info = VBEtioProbsReg(res)
etio.info
plot(etio.info[[1]]$etio.probs.pL, type = "b", col = "blue", ylim = c(0, 0.28))
lines(sim.obj$cell.prob.unique[1, ], type = "b", col = "red")
plot(etio.info[[2]]$etio.probs.pL, type = "b", col = "blue", ylim = c(0, 0.28))
lines(sim.obj$cell.prob.unique[2, ], type = "b", col = "red")
etio.info$ss.tpr
etio.info$bs.tpr
etio.info$bs.fpr
Rcpp::sourceCpp('VBEM_Regression.cpp')
Rcpp::sourceCpp('VBEM_Regression.cpp')
