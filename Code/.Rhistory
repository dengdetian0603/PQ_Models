#      xlim=c(0,1500), ylim=c(0,1500),asp=1)
# abline(a=0,b=1,col="red")
# abline(v=0,col="black")
# abline(h=0,col="black")
load("~/Documents/JHSPH/Research/DreamChallenge/report/cvPredict03022016.Rda")
downsample = sample(1:1600, 600)
D = as.numeric(Y.train$DEATH[downsample])
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(4, 1))
par(mai=c(1,1,0.2,0.2))
plot(Y.train$LKADT_P[downsample]/30, avg.OutOfSamplePrediction[downsample]/30, xlab="Observed Time (month)", col= D,
ylab="Out-of-bag Predicted Time", pch= (D-1)*18, xlim=c(0,50), ylim=c(0,50) , xaxp  = c(0, 48, 4))
abline(a=0,b=1,col="red")
plot(Y.train$LKADT_P[downsample]/30, t.imp.avg[downsample]/30, xlab="Observed Time (month)", col=D,
ylab="Imputed Time", pch=(D-1)*18, xlim=c(0,50), ylim=c(0,50),  xaxp  = c(0, 48, 4))
abline(a=0,b=1,col="red")
par(mai=c(0,0,0,0))
plot.new()
legend("center", col=1:2, pch=c(0,18), legend=c("Censored Observations", "Actual Survival Times"))
layout(matrix(1))
set.seed(649)
data = rnorm(200,0,5)
save.image("~/Desktop/TA646/hw1data.RData")
inv.logit = function(x)
{
1/(1+exp(-x))
}
par0 = c(-0.8472979, 0.6190392, -1.386294, 0.4054651, -1.386294)
inv.logit(par0)
round(inv.logit(par0),4)
bias.ex1.truth =  c(-0.01581599, -0.002502574, -0.01598298, -0.00421396, 0.01085477)
bias.ex0.truth = c(-0.01662488, 0.01262615, -0.04371849, -0.003699009, 0.001240989)
bias.ex1.prior = c( -0.5532704, 1.094511, -0.1468577, 1.521978, 0.09652053)
bias.ex0.prior = c(-0.5614301, 1.170443, -0.1303212, 1.517447, 0.1164624)
round(inv.logit(par0),4)
beta1 = par0 + bias.ex1.truth
beta2 = par0 + bias.ex0.truth
beta3 = par0 + bias.ex1.prior
beta4 = par0 + bias.ex0.prior
mu0 = round(inv.logit(par0),4)
mu1 = round(inv.logit(beta1),4)
mu2 = round(inv.logit(beta2),4)
mu3 = round(inv.logit(beta3),4)
mu4 = round(inv.logit(beta4),4)
cbind(mu0, mu1, mu2, mu3, mu4)
curve(dbeta)
curve(dbeta, 0,1)
plot(density(rbeta(1000,1,9)))
lines(density(rbeta(1000,1,9)),col=2)
plot(density(rbeta(10000,1,9)))
lines(density(rbeta(1000,1,6)),col=2)
lines(density(rbeta(1000,1,19)),col=3)
lines(density(rbeta(1000,10,90)),col=2)
plot(density(rbeta(10000,2,18)))
lines(density(rbeta(1000,3,27)),col=2)
plot(density(rbeta(10000,3,27)))
lines(density(rbeta(1000,3,18)),col=2)
lines(density(rbeta(1000,3,57)),col=3)
devtools::install_github("muschellij2/swirl", ref = "dev")
library(devtools)
install.packages('devtools')
devtools::install_github("muschellij2/swirl", ref = "dev")
library(swirl)
install_from_swirl("Getting_and_Cleaning_Data")
swirl()
mydf  <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head
(mydf)
head(mydf)
library(dplyr)
packageVersion('dplyr')
cran  <- tbl_df(mydf)
rm('mydf')
print(tbl_df)
print(cran)
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version < "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500)
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, !is.na(r_version))
cran2  <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran  <- tbl_df(mydf)
rm('mydf')
cran
?group_by
by_package  <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(by_package, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, desc(unique))
arrange(top_unique, desc(unique))->top_unique_sorted
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submmit()
submit()
library(tidyr)
students
?gather
gather(student, student, sex, count, -grade)
gather(students, student, sex, count, -grade)
gather(students, sex, count, -grade)
students2
gather(students2, sex_class, count)->res
gather(students2, sex_class, count, -grade)->res
res
?separate
separate(res, sex_class, c("sex","class"), sep="_")
separate(res, sex_class, c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
submit()
reset()
swirl()
submit()
submit()
submit()
library(readr)
parse_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = 'passed')
faileded <- mutate(failed, status = 'failed')
failed <- failed %>% mutate(status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
?separate
submit()
submit()
submit()
x = rbeta(500, 2, 3)
y = logit(x)
x = rbeta(500, 2, 3)
y = log(x/(1-x))
qqplot(y)
qqnorm(y)
abline(a = 0, b = 1)
x = rbeta(500, 2, 3)
y = log(x/(1-x)) - log(4/6)
plot(density(y))
qqnorm(y)
abline(a = 0, b = 1)
x = rbeta(5000, 2, 3)
y = log(x/(1-x)) - log(4/6)
plot(density(y))
qqnorm(y)
abline(a = 0, b = 1)
install.packages("spcov")
install.packages("robust")
install.packages("infotheo")
library(infotheo)
dat = data.frame(x1 = rbeta(300, 2,1), x2 = rbeta(300, 20, 10), x3 = rbeta(300, 1,1,))
interinformation(dat)
interinformation(dat, "mm")
interinformation(dat, "shrink")
interinformation(dat, "sg")
multiinformation(dat, "sg")
multiinformation(dat, "mm")
dat2 = discretize(dat)
dat2
multiinformation(dat2)
interinformation(dat2)
mutinformation(dat2$x1, dat$x2)
mutinformation(dat2$x1, dat2$x2)
dat = data.frame(x1 = rbeta(3000, 2,1), x2 = rbeta(3000, 20, 10), x3 = rbeta(3000, 1,1,))
dat = discretize(dat)
mutinformation(dat$x1, dat$x2)
dat = data.frame(x1 = rbeta(3000, 2,1), x2 = rbeta(3000, 20, 10), x3 = rbeta(3000, 2,1,))
dat = discretize(dat)
mutinformation(dat$x1, dat$x2)
mutinformation(dat$x1, dat$x3)
dat = data.frame(x1 = rbeta(3000, 2,1), x2 = rbeta(3000, 20, 10), x3 = rbeta(3000, 2,1))
dat = discretize(dat)
dat
plot(dat$x1, dat$x3)
hist(dat$x1)
dist(dat$x3)
hist(dat$x2)
hist(dat$x1)
))
hist(dat$x2)
dat = data.frame(x1 = rbeta(3000, 2,1), x2 = rbeta(3000, 20, 10), x3 = rbeta(3000, 2,1))
hist(discretize(dat$x1, "equalwidth", 30))
discretize(dat$x1, "equalwidth", 30)
hist(discretize(dat$x1, "equalwidth", 30)[,1])
hist(discretize(dat$x1, "equalfref", 30)[,1])
hist(discretize(dat$x1, "equalfreq", 30)[,1])
hist(discretize(dat$x1, "equalwidth", 30)[,1])
hist(discretize(dat$x1, "equalwidth", 60)[,1])
hist(discretize(dat$x2, "equalwidth", 60)[,1])
hist(discretize(dat$x3, "equalwidth", 60)[,1])
dat = discretize(dat, "equalwidth", 40)
mutinformation(dat$x1, dat$x3)
mutinformation(dat$x1, dat$x2)
mutinformation(dat$x3, dat$x2)
mutinformation(dat$x2, dat$x1)
mutinformation(dat$x2, dat$x3)
mutinformation(dat$x2, dat$x3)/entropy(dat$x3)
mutinformation(dat$x1, dat$x3)/entropy(dat$x3)
mutinformation(dat$x3, dat$x3)/entropy(dat$x3)
mutinformation(dat$x1, dat$x3)/entropy(dat$x3)
dat = data.frame(x1 = rbeta(3000, 4,2), x2 = rbeta(3000, 20, 10), x3 = rbeta(3000, 4,2))
dat = discretize(dat, "equalwidth", 50)
mutinformation(dat$x3, dat$x3)/entropy(dat$x3)
mutinformation(dat$x1, dat$x3)/entropy(dat$x3)
mutinformation(dat$x2, dat$x3)/entropy(dat$x3)
entropy(dat$x3)
install.packages(mpmi)
install.packages("mpmi")
library(mpmi)
install.packages("mpmi")
library(mpmi)
?install.packages
setwd("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code")
load("../WorkSpace/PQ_20170316/SAF_HIV_top5.Rdata")
source("./RawDataProcess.R")
source("./PerchDataSimulation.R")
source("./ModelFittingJAGS.R")
source("./PostProcessJAGS.R")
source("./PerchPlots.R")
source("../../BAKER/utils.R")
library(ggplot2)
library(coda)
pos.rates.tab = round(t(pos.rates.summary), 3)
rownames(pos.rates.tab) = c(paste0("bs_tpr_", top5.names),
paste0("bs_fpr_", top5.names),
paste0("ss_tpr_", top5.names[4:5]))
pos.rates.tab
mu.raw = colMeans(top5.data$topK.mbs.case, na.rm = TRUE)
# mu.hat = (mu.raw - fpr)/(tpr - fpr)
mu.hat = (mu.raw - colMeans(bs.fpr.fit))/(colMeans(bs.tpr.fit) - colMeans(bs.fpr.fit))
mu.compare = cbind(mu.raw, mu.hat, colMeans(Mu.fit),
t(apply(Mu.fit, 2, quantile, c(0.025, 0.975))))
colnames(mu.compare)[1:3] = c("mu.raw", "mu.adjusted", "mu.posterior")
round(mu.compare, 3)
Pr.num.tab = cbind(colMeans(Pr.Num.Path.fit),
t(apply(Pr.Num.Path.fit, 2, quantile, c(0.025, 0.975))))
colnames(Pr.num.tab)[1] = "Means"
rownames(Pr.num.tab) = paste0("Pr(#pathogen=", 0:5, ")")
round(Pr.num.tab, 3)
class(mu.compare)
mu.plot = data.frame(Pathogen = rownames(mu.compare),
Mean = mu.compare[, 3], Lower = mu.compare[, 4],
Upper = mu.compare[, 5])
g = ggplot(data = mu.plot) +
geom_point(aes(x = factor(Pathogen), y = Mean)) +
geom_linerange(aes(ymax = Upper, ymin = Lower))
g
ggplot(data = mu.plot) +
geom_point(aes(x = factor(Pathogen), y = Mean)) +
geom_linerange(aes(x = factor(Pathogen), ymax = Upper, ymin = Lower))
ggplot(data = mu.plot) +
geom_point(aes(x = Pathogen, y = Mean)) +
geom_linerange(aes(x = Pathogen, ymax = Upper, ymin = Lower))
ggplot(data = mu.plot) + ylab("Posterior")
geom_point(aes(x = Pathogen, y = Mean)) +
geom_linerange(aes(x = Pathogen, ymax = Upper, ymin = Lower))
ggplot(data = mu.plot) + ylab("Posterior") +
geom_point(aes(x = Pathogen, y = Mean)) +
geom_linerange(aes(x = Pathogen, ymax = Upper, ymin = Lower))
ggplot(data = mu.plot) + ylab("Posterior") +
geom_point(aes(x = Pathogen, y = Mean)) +
geom_linerange(aes(x = Pathogen + 0.5, ymax = Upper, ymin = Lower))
g = ggplot(data = mu.plot) + ylab("Posterior") +
geom_point(aes(x = Pathogen, y = Mean)) +
geom_linerange(aes(x = Pathogen, ymax = Upper, ymin = Lower))
g
setwd("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code")
source("./RawDataProcess.R")
source("./PerchDataSimulation.R")
source("./ModelFittingJAGS.R")
source("./PostProcessJAGS.R")
source("./PerchPlots.R")
source("../../BAKER/utils.R")
library(ggplot2)
setwd("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code")
source("./RawDataProcess.R")
source("./PerchDataSimulation.R")
source("./ModelFittingJAGS.R")
source("./PostProcessJAGS.R")
source("./PerchPlots.R")
source("../../BAKER/utils.R")
library(ggplot2)
load("../WorkSpace/PQ_20170316/SAF_HIV_top5.Rdata")
data.frame(Pathogen = NA, Experiment = NA, Posterior.Mean = NA,
Lower = NA, Upper = NA)
mu.plot = data.frame(Pathogen = NA, Experiment = NA, Posterior.Mean = NA,
Lower = NA, Upper = NA)
colMeans(Mu.fit)
colnames(Mu.fit)
MuSummary = function(Experient, Mu.fit) {
mu.plot = data.frame(Pathogen = colnames(Mu.fit), Experiment = Experiment,
Posterior.Mean = colMeans(Mu.fit),
Lower = apply(Mu.fit, 2, quantile, 0.025),
Upper = apply(Mu.fit, 2, quantile, 0.975))
mu.plot
}
mu.plot = MuSummary('top5', Mu.fit)
MuSummary = function(Experiment, Mu.fit) {
mu.plot = data.frame(Pathogen = colnames(Mu.fit), Experiment = Experiment,
Posterior.Mean = colMeans(Mu.fit),
Lower = apply(Mu.fit, 2, quantile, 0.025),
Upper = apply(Mu.fit, 2, quantile, 0.975))
mu.plot
}
mu.plot = MuSummary('top5', Mu.fit)
paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+"))
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top5.Rdata")
mu.plot = MuSummary('top5', Mu.fit)
load("../WorkSpace/PQ_20170316/SAF_HIV_top7a.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7b.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7c.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7d.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit))
g = ggplot(data = mu.plot, aes(x = Pathogen, group = Experiment)) +
geom_point(aes(x = Pathogen, y = Posterior.Mean)) +
geom_linerange(aes(x = Pathogen, ymax = Upper, ymin = Lower)) +
ylab("Posterior Distribution")
g
g = ggplot(data = mu.plot, aes(x = Pathogen, group = Experiment)) +
geom_point(aes(x = Pathogen, y = Posterior.Mean)) +
geom_linerange(aes(x = Pathogen, ymax = Upper, ymin = Lower,
fill = Experiment), position = "dodge") +
ylab("Posterior Distribution")
g
g = ggplot(data = mu.plot, aes(x = Pathogen, group = Experiment)) +
geom_point(aes(x = Pathogen, y = Posterior.Mean)) +
geom_linerange(aes(x = Pathogen, ymax = Upper, ymin = Lower,
col = Experiment), position = "dodge") +
ylab("Posterior Distribution")
g
g = ggplot(data = mu.plot, aes(x = factor(Pathogen), col = Experiment)) +
geom_point(aes(y = Posterior.Mean)) +
geom_linerange(aes(ymax = Upper, ymin = Lower), position = "dodge") +
ylab("Posterior Distribution")
g
g = ggplot(data = mu.plot, aes(x = factor(Pathogen), col = Experiment)) +
geom_point(aes(y = Posterior.Mean)) +
geom_linerange(aes(ymax = Upper, ymin = Lower)) +
ylab("Posterior Distribution") + xlab("Pathogen") +
position_dodge(width = 0.5)
g
g = ggplot(data = mu.plot, aes(x = factor(Pathogen), col = Experiment)) +
geom_point(aes(y = Posterior.Mean), position = 'dodge') +
geom_linerange(aes(ymax = Upper, ymin = Lower)) +
ylab("Posterior Distribution") + xlab("Pathogen")
g
g = ggplot(data = mu.plot, aes(x = factor(Pathogen), col = Experiment)) +
geom_point(aes(y = Posterior.Mean), position = position_dodge(width = 0.1)) +
geom_linerange(aes(ymax = Upper, ymin = Lower),
position = position_dodge(width = 0.1)) +
ylab("Posterior Distribution") + xlab("Pathogen")
g
g = ggplot(data = mu.plot, aes(x = factor(Pathogen), col = Experiment)) +
geom_point(aes(y = Posterior.Mean), position = position_dodge(width = 0.5)) +
geom_linerange(aes(ymax = Upper, ymin = Lower),
position = position_dodge(width = 0.5)) +
ylab("Posterior Distribution") + xlab("Pathogen")
g
save(mu.plot, file = "../WorkSpace/PQ_20170316/SummaryPlots.Rdata")
Pr.num.tab
load("../WorkSpace/PQ_20170316/SAF_HIV_top7d.Rdata")
Pr.num.tab
round(summary(as.mcmc(Pr.Num.Path.fit))[[1]], 4)
temp = cbind(Mu.fit, Pr.Num.Path.fit[, 1])
head(temp)
load("../WorkSpace/PQ_20170316/SAF_HIV_top5.Rdata")
mu.plot = MuSummary('top5', Mu.fit, Pr.Num.Path.fit)
load("../WorkSpace/PQ_20170316/SAF_HIV_top7a.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7b.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7c.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7d.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
save(mu.plot, file = "../WorkSpace/PQ_20170316/SummaryPlots.Rdata")
g = ggplot(data = mu.plot, aes(x = factor(Pathogen), col = Experiment)) +
geom_point(aes(y = Posterior.Mean), position = position_dodge(width = 0.5)) +
geom_linerange(aes(ymax = Upper, ymin = Lower),
position = position_dodge(width = 0.5)) +
ylab("Posterior Distribution") + xlab("Pathogen")
g
MuSummary = function(Experiment, Mu.fit, Pr.Num.Path.fit) {
Mu.fit = cbind(Pr.Num.Path.fit[, 1], Mu.fit)
colnames(Mu.fit)[1] = "NoA"
mu.plot = data.frame(Pathogen = colnames(Mu.fit), Experiment = Experiment,
Posterior.Mean = colMeans(Mu.fit),
Lower = apply(Mu.fit, 2, quantile, 0.025),
Upper = apply(Mu.fit, 2, quantile, 0.975))
mu.plot
}
load("../WorkSpace/PQ_20170316/SAF_HIV_top5.Rdata")
mu.plot = MuSummary('top5', Mu.fit, Pr.Num.Path.fit)
load("../WorkSpace/PQ_20170316/SAF_HIV_top7a.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7b.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7c.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
load("../WorkSpace/PQ_20170316/SAF_HIV_top7d.Rdata")
mu.plot = rbind(mu.plot,
MuSummary(paste0('top5+',
paste0(top7.names[-(1:5)], collapse = "+")),
Mu.fit, Pr.Num.Path.fit))
save(mu.plot, file = "../WorkSpace/PQ_20170316/SummaryPlots.Rdata")
g = ggplot(data = mu.plot, aes(x = factor(Pathogen), col = Experiment)) +
geom_point(aes(y = Posterior.Mean), position = position_dodge(width = 0.5)) +
geom_linerange(aes(ymax = Upper, ymin = Lower),
position = position_dodge(width = 0.5)) +
ylab("Posterior Distribution") + xlab("Pathogen")
g
