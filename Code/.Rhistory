if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
} else {
cell.prob.fit0 = cell.prob.fit
}
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit)
do.call(grid.arrange, plot.obj)
beta_parms_from_quantiles(c(0.5, 0.99), p = c(0.025, 0.975),
plot = TRUE)
beta_parms_from_quantiles(c(0.5, 0.9), p = c(0.025, 0.975),
plot = TRUE)
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit)
do.call(grid.arrange, plot.obj)
file.names = system("ls ./SS_NA/*.csv", intern = TRUE)
file.names
f = 1
file = file.names[f]
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
} else {
cell.prob.fit0 = cell.prob.fit
}
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit)
do.call(grid.arrange, plot.obj)
file
f = 2
file = file.names[f]
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
} else {
cell.prob.fit0 = cell.prob.fit
}
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit)
do.call(grid.arrange, plot.obj)
file
file.names
f = 4
file = file.names[f]
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
} else {
cell.prob.fit0 = cell.prob.fit
}
PlotByPathogen(NULL, sim.obj, mu.fit = Mu.fit)
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit)
do.call(grid.arrange, plot.obj)
file.names
f = 5
file = file.names[f]
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
} else {
cell.prob.fit0 = cell.prob.fit
}
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit)
f = 4
file = file.names[f]
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
} else {
cell.prob.fit0 = cell.prob.fit
}
file = "./AD.SensitivityAnalysis/AccurateData-SC1-2CovItrc-theta1--0.5-theta2--5-pindab-6_2.csv"
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = cell.prob.fit)
do.call(grid.arrange, plot.obj)
ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16) -> cell.prob.fit
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = cell.prob.fit)
file
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16) -> cell.prob.fit
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = cell.prob.fit)
do.call(grid.arrange, plot.obj)
file.names
f = 1
file = file.names[f]
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
}
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = cell.prob.fit)
do.call(grid.arrange, plot.obj)
file
f = 1
file = file.names[f]
sim.fit = read.csv(file)
load(gsub(".csv", ".RData", file))
EtioPrior = ListEtiologyPriorSC1(5, 5, hyper.pars.list,
as.character(1:5), 20000)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
}
suppressMessages(source("../Code/PerchDataSimulation.R"))
suppressMessages(source("../Code/PostProcessJAGS.R"))
suppressMessages(source("../Code/PerchPlots.R"))
file.names
f = 4
file = file.names[f]
sim.fit = read.csv(file)
# load(gsub(".csv", ".RData", file))
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
if (grepl("Baker", file)) {
baker.fit = ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16)
} else {
cell.prob.fit0 = cell.prob.fit
}
file = "./AD.SensitivityAnalysis/AccurateData-SC1-2CovItrc-theta1--0.5-theta2--5-pindab-6_2.csv"
sim.fit = read.csv(file)
Mu.fit = list()
cell.prob.fit = NULL
n.strata = 4
for (i in 1:n.strata) {
temp = sim.fit[, paste0(paste0("Mu.", i), ".", 1:5, ".")]
colnames(temp) = paste0("Mu[", 1:5, "]")
Mu.fit[[i]] = temp
# sim.fit[, paste0(paste0("PrNumPath.", i), ".", 0:5, ".")]
temp = sim.fit[, paste0(paste0("cell_prob.", i), ".", 1:32, ".")]
colnames(temp) = paste0(paste0("cell_prob[", i), ",", 1:32, "]")
if (length(cell.prob.fit) > 0) {
cell.prob.fit = cbind(cell.prob.fit, temp)
} else {
cell.prob.fit = temp
}
}
ListEtiology(cell.prob.fit, sim.obj,
etio.names = c("A", "B", "C", "D", "E"),
reorder = FALSE, num.keep = 16) -> ad.fit
file
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/PerchPlots.R')
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/PerchPlots.R')
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/PerchPlots.R')
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/PerchPlots.R')
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/PerchPlots.R')
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
source('~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code/PerchPlots.R')
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
do.call(grid.arrange, plot.obj)
PlotByCombination <- function(coda.chains, sim.obj, hyper.pars.list,
etio.names = c("Patho_A", "Patho_B",
"Patho_C", "Patho_D", "Patho_E"),
contrast = "prior", reorder = FALSE,
num.keep = NULL,
baker.result = NULL,
baker.result2 = NULL,
text.adjust = -1.2,
has.true.value = FALSE) {
# Example:
# plog.obj = PlotByCombination(coda.fit[[1]], sim.obj, hyper.pars.list)
#
K = ncol(sim.obj$L)
Smax = sim.obj$Smax
EtioList = ListEtiology(coda.chains, sim.obj, etio.names, reorder, num.keep)
EtioPrior = ListEtiologyPriorSC1(K, Smax, hyper.pars.list,
etio.names, 20000, num.keep)
X.unique = data.frame(uniquecombs(sim.obj$X))
gplot.obj = list()
for (i in 1:length(EtioList)) {
Prior = merge(data.frame(EtioComb = EtioList[[i]]$EtioComb),
EtioPrior$Cell.prob, sort = FALSE)
Label = MakeXLabel(EtioPrior$EtioMat, EtioPrior$Cell.prob$EtioComb,
num.keep)
XLabel = merge(data.frame(EtioComb = EtioList[[i]]$EtioComb),
Label, sort = FALSE)
legend  = paste0(c("X1 = ", "X2 = "),
c(X.unique$AGE[i], X.unique$SEVERITY[i]))
g = ggplot() + xlab("") +
geom_point(data = EtioList[[i]], aes(x = 1:nrow(EtioList[[i]]),
y = Probability)) +
geom_linerange(data = EtioList[[i]], aes(x = 1:nrow(EtioList[[i]]),
ymax = Prob.upper,
ymin = Prob.lower)) +
scale_x_continuous(breaks = 1:nrow(XLabel),
labels = as.character(XLabel$Label)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
annotate("text", x = nrow(EtioList[[i]]) - 4,
y = 0.7 - (1:length(legend)) * 0.1,
hjust = 0, label = legend)
if (contrast == "prior") {
g = g + geom_point(data = Prior, aes(x = (1:nrow(Prior)) + 0.2,
y = Probability),
alpha = 0.5) +
geom_linerange(data = Prior, aes(x = (1:nrow(Prior)) + 0.2,
ymax = Prob.upper,
ymin = Prob.lower),
alpha = 0.5)
} else if (contrast == "baker" && length(baker.result) > 0) {
g = g + geom_point(data = baker.result[[i]],
aes(x = (1:nrow(baker.result[[i]])) + 0.2,
y = Probability),
alpha = 0.5) +
geom_linerange(data = baker.result[[i]],
aes(x = (1:nrow(baker.result[[i]])) + 0.2,
ymax = Prob.upper, ymin = Prob.lower),
alpha = 0.5)
if (length(baker.result2) > 0) {
g = g + geom_point(data = baker.result2[[i]],
aes(x = (1:nrow(baker.result2[[i]])) + 0.4,
y = Probability),
alpha = 0.75) +
geom_linerange(data = baker.result2[[i]],
aes(x = (1:nrow(baker.result2[[i]])) + 0.4,
ymax = Prob.upper, ymin = Prob.lower),
alpha = 0.75)
}
}
if (has.true.value) {
par0 = data.frame(
Prob = c(sim.obj$cell.prob.unique[i, 1:num.keep],
1 - sum(sim.obj$cell.prob.unique[i, 1:num.keep])))
g = g + geom_segment(data = par0, aes(x = (1:(num.keep + 1)) - 0.2,
xend = (1:(num.keep + 1)) + 0.6,
y = Prob, yend = Prob),
col = "red", size = 1.1)
}
footnote <- paste(rev(etio.names), collapse = "\n")
grid.newpage()
gg = arrangeGrob(g, bottom = textGrob(
footnote, x = 0.05, hjust = 0, vjust = text.adjust,
gp = gpar(fontface = "italic", fontsize = 7, lineheight = 0.95)))
gplot.obj[[i]] = gg
grid.draw(gg)
}
return(gplot.obj)
}
plot.obj = PlotByCombination(cell.prob.fit0, sim.obj,
hyper.pars.list, num.keep = 16,
has.true.value = TRUE, text.adjust = -1.2,
contrast = "baker", baker.result = baker.fit,
baker.result2 = ad.fit)
do.call(grid.arrange, plot.obj)
load("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/WorkSpace/Kenya/2017_01_26_Top5_SingletonAndPair_Reg.RData")
ListEtiology(coda.fit[[1]], sim.obj, top5.names, FALSE)
load("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/WorkSpace/Kenya/Kenya_sc1_20170126.RData")
setwd("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/Code")
source("./PerchDataSimulation.R")
source("./ModelFittingJAGS.R")
source("./PostProcessJAGS.R")
source("./PerchPlots.R")
source("../../BAKER/utils.R")
library(ggplot2)
ListEtiology(coda.fit[[1]], sim.obj, top5.names, FALSE)
ListEtiology(coda.fit[[1]], sim.obj, top5.names,
reorder = FALSE, num.keep = 16)
ListEtiology(coda.fit[[1]], sim.obj, top5.names,
reorder = FALSE, num.keep = 16) -> temp
round(temp, 3)
round(temp[[1]], 3)
cbind(temp[[1]][, 1], round(temp[[1]][, -1], 3))
cbind(temp[[1]][, 1], round(temp[[1]][, -1], 4))
cbind(temp[[1]][, 1], round(temp[[2]][, -1], 4))
cbind(temp[[1]][, 1], round(temp[[3]][, -1], 4))
cbind(temp[[1]][, 1], round(temp[[4]][, -1], 4))
