par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
prob.boot = cbind(probs.boot.2[, etio.idx], rowSums(probs.boot.2[, -etio.idx]))
etio.comb = c(etio.comb, "Sum of Rest Combinations")
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.2[, etio.idx], rowSums(probs.boot.2[, -etio.idx]))
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
rowSums(probs.boot.2[, -etio.idx])
colnames(probs.boot.1)
rowSums(probs.boot.2[, -etio.idx])
rowSums(probs.boot.1[, -etio.idx])
etio.idx = which(apply(probs.boot.1, 2, quantile, 0.9) > 1e-4 |
apply(probs.boot.2, 2, quantile, 0.9) > 1e-4)
L.etio.mat = rbind(rep(0, 10), d.mat$Lmat)[etio.idx, ]
etio.comb = apply(L.etio.mat, 1, function(x) {
paste(etio.names[x > 0], collapse = "-")
})
etio.comb[etio.comb == ""] = "None of These"
etio.comb = c(etio.comb, "Sum of Rest Combinations")
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.1[, etio.idx],
rowSums(probs.boot.1[, -etio.idx]))
# prob.boot = (probs.boot.2 - probs.boot.1)[, etio.idx]
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
etio.idx = which(apply(probs.boot.1, 2, quantile, 0.5) > 1e-4 |
apply(probs.boot.2, 2, quantile, 0.5) > 1e-4)
L.etio.mat = rbind(rep(0, 10), d.mat$Lmat)[etio.idx, ]
etio.comb = apply(L.etio.mat, 1, function(x) {
paste(etio.names[x > 0], collapse = "-")
})
etio.comb[etio.comb == ""] = "None of These"
etio.comb = c(etio.comb, "Sum of Rest Combinations")
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.1[, etio.idx],
rowSums(probs.boot.1[, -etio.idx]))
# prob.boot = (probs.boot.2 - probs.boot.1)[, etio.idx]
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
etio.idx = which(apply(probs.boot.1, 2, quantile, 0.7) > 1e-4 |
apply(probs.boot.2, 2, quantile, 0.7) > 1e-4)
L.etio.mat = rbind(rep(0, 10), d.mat$Lmat)[etio.idx, ]
etio.comb = apply(L.etio.mat, 1, function(x) {
paste(etio.names[x > 0], collapse = "-")
})
etio.comb[etio.comb == ""] = "None of These"
etio.comb = c(etio.comb, "Sum of Rest Combinations")
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.1[, etio.idx],
rowSums(probs.boot.1[, -etio.idx]))
# prob.boot = (probs.boot.2 - probs.boot.1)[, etio.idx]
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
etio.idx = which(apply(probs.boot.1, 2, quantile, 0.8) > 1e-4 |
apply(probs.boot.2, 2, quantile, 0.8) > 1e-4)
L.etio.mat = rbind(rep(0, 10), d.mat$Lmat)[etio.idx, ]
etio.comb = apply(L.etio.mat, 1, function(x) {
paste(etio.names[x > 0], collapse = "-")
})
etio.comb[etio.comb == ""] = "None of These"
etio.comb = c(etio.comb, "Sum of Rest Combinations")
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.1[, etio.idx],
rowSums(probs.boot.1[, -etio.idx]))
# prob.boot = (probs.boot.2 - probs.boot.1)[, etio.idx]
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
d.adj[n.comb] = 1
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
d.adj = ifelse(j == n.comb, 1)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
d.adj = ifelse(j == n.comb, 1, d.adj)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
etio.idx = which(apply(probs.boot.1, 2, quantile, 0.9) > 1e-4 |
apply(probs.boot.2, 2, quantile, 0.9) > 1e-4)
L.etio.mat = rbind(rep(0, 10), d.mat$Lmat)[etio.idx, ]
etio.comb = apply(L.etio.mat, 1, function(x) {
paste(etio.names[x > 0], collapse = "-")
})
etio.comb[etio.comb == ""] = "None of These"
etio.comb = c(etio.comb, "Sum of Rest Combinations")
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.1[, etio.idx],
rowSums(probs.boot.1[, -etio.idx]))
# prob.boot = (probs.boot.2 - probs.boot.1)[, etio.idx]
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) # from = 0
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.1[, etio.idx],
rowSums(probs.boot.1[, -etio.idx]))
# prob.boot = (probs.boot.2 - probs.boot.1)[, etio.idx]
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj, from = 0)
plot(dy, xlim = c(0, 0.45), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj, from = 0)
plot(dy, xlim = c(0, 0.45), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
n.comb = length(etio.idx) + 1
prob.boot = cbind(probs.boot.2[, etio.idx],
rowSums(probs.boot.2[, -etio.idx]))
# prob.boot = (probs.boot.2 - probs.boot.1)[, etio.idx]
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj, from = 0)
plot(dy, xlim = c(0, 0.45), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe Cases",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
diff.prob = probs.boot.2 - probs.boot.1
prob.boot = cbind(diff.prob[, etio.idx], rowSums(diff.prob[, -etio.idx]))
par(mar = c(0, 4, 0, 1))
par(oma = c(4, 5, 3, 0))
layout(matrix(1:n.comb, nrow = n.comb))
for (j in 1:n.comb) {
xaxt = ifelse(j < n.comb, "n", "s")
d.adj = ifelse(j < 8, 1.6, 2.2)
dy = density(prob.boot[, j], adjust = d.adj) #, from = 0)
plot(dy, xlim = c(-0.2, 0.25), xaxt = xaxt, yaxt = "n",
ylab = "", , main = "", lwd = 3, col = "dark gray")
mtext(etio.comb[j], side = 2, las = 1, line = 1, cex = 0.5)
vx = quantile(prob.boot[, j], c(0.025, 0.975))
vx = c(vx, prob.boot[1, j], mean(prob.boot[, j]))
for (i in 1:2) {
vy = dy$y[which.min(abs(dy$x - vx[i]))]
lines(rep(vx[i], 2), c(0, vy), lty = 3, lwd = 1.6)
}
vy = dy$y[which.min(abs(dy$x - vx[3]))]
lines(rep(vx[3], 2), c(0, vy), lwd = 2, col = "blue")
abline(v = 0, col = "dark grey")
}
mtext("Etiology Probability",
side = 1, line = 2.5, cex = 1, col = 1, outer = TRUE)
mtext("Very Severe minus Severe ",
side = 3, line = 1.5, cex = 1, col = 1, outer = TRUE)
layout(matrix(1, nrow = 1))
boot.tab0 = matrix(NA, nrow = length(etio.idx), ncol = 6)
boot.tab0[, 1] = colMeans(probs.boot.1)[etio.idx]
boot.tab0[, 2] = apply(probs.boot.1, 2, sd)[etio.idx]
boot.tab0[, 3] = colMeans(probs.boot.2)[etio.idx]
boot.tab0[, 4] = apply(probs.boot.2, 2, sd)[etio.idx]
boot.tab0[, 5] = colMeans(diff.prob)[etio.idx]
boot.tab0[, 6] = apply(diff.prob, 2, sd)[etio.idx]
boot.tab = round(boot.tab0, 4)
boot.tab = cbind(etio.comb, boot.tab)
boot.tab[13:14, -1] = round(boot.tab0[13:14, ], 5)
boot.tab0 = matrix(NA, nrow = length(etio.idx) + 1, ncol = 6)
p1 = cbind(probs.boot.1[, etio.idx], rowSums(probs.boot.1[, -etio.idx]))
p2 = cbind(probs.boot.2[, etio.idx], rowSums(probs.boot.2[, -etio.idx]))
p.diff = cbind(diff.prob[, etio.idx], rowSums(diff.prob[, -etio.idx]))
boot.tab0[, 1] = colMeans(p1)
boot.tab0[, 2] = apply(p1, 2, sd)
boot.tab0[, 3] = colMeans(p2)
boot.tab0[, 4] = apply(p2, 2, sd)
boot.tab0[, 5] = colMeans(p.diff)
boot.tab0[, 6] = apply(p.diff, 2, sd)
boot.tab = round(boot.tab0, 4)
boot.tab = cbind(etio.comb, boot.tab)
boot.tab[13:14, -1] = round(boot.tab0[13:14, ], 5)
colnames(boot.tab) = c("Pathogen",
"Severe: Estimates", "Severe: Std. Error",
"Very Severe: Std.Error", "Very Severe: Std. Error")
colnames(boot.tab) = c("Pathogen",
"Severe: Estimates", "Severe: Std. Error",
"Very Severe: Std.Error", "Very Severe: Std.Error",
"Increment: Estimates", "Increment: Std.Error")
boot.tab
write.csv(boot.tab, file = "../WorkSpace/Kenya/bootstrap_table.csv")
load("~/Documents/JHSPH/Research/S.Zeger/PQ_Models/WorkSpace/KenyaData_NPPCR_BCX.RData")
etio.names = c("RSV", "PNEU", "RHINO", "HMPV_A_B", "HINF", "PARA_1", "ADENO", "SAUR", "COR", "FLU_C")
# SASP is not usable
# etio.names = union(ss.names, bs.names)
# etio.names = intersect(ss.names, bs.names)
# etio.names = bs.names
n.pathogen = length(etio.names)
n.case = sum(data_nplcm$Y == 1)
n.ctrl = sum(data_nplcm$Y == 0)
case.idx = which(data_nplcm$Y == 1)
ctrl.idx = which(data_nplcm$Y == 0)
mbs.case = matrix(as.numeric(NA), nrow = n.case, ncol = n.pathogen)
colnames(mbs.case) = etio.names
mss.case = mbs.case
mbs.ctrl = matrix(as.numeric(NA), nrow = n.ctrl, ncol = n.pathogen)
colnames(mbs.ctrl) = etio.names
bs.avail = c()
ss.avail = c()
for (i in 1:n.pathogen) {
if (etio.names[i] %in% bs.names) {
bs.avail = c(bs.avail, i)
mbs.case[, i] = data_nplcm$Mobs$MBS$NPPCR[case.idx, etio.names[i]]
mbs.ctrl[, i] = data_nplcm$Mobs$MBS$NPPCR[ctrl.idx, etio.names[i]]
}
if (etio.names[i] %in% ss.names) {
ss.avail = c(ss.avail, i)
mss.case[, i] = data_nplcm$Mobs$MSS$BCX[case.idx, etio.names[i]]
}
}
# X.case = cbind(1, data_nplcm$X[data_nplcm$Y == 1, c("AGE")])
# colnames(X.case) = c("intercept", "AGE")
X.case = cbind(1, data_nplcm$X[data_nplcm$Y == 1, c("CASECONT_SUB")] - 3)
colnames(X.case) = c("intercept", "Severity")
cc.case = complete.cases(cbind(mbs.case[, bs.avail],
mss.case[, ss.avail],
X.case))
cc.ctrl = complete.cases(mbs.ctrl[, bs.avail])
input.obj = list(MSS.case = as.matrix(mss.case[cc.case, ]),
MBS.case = as.matrix(mbs.case[cc.case, ]),
MBS.ctrl = as.matrix(mbs.ctrl[cc.ctrl, ]),
X = as.matrix(X.case[cc.case, ]),
ss.available = ss.avail, bs.available = bs.avail)
ss.avail
bs.avail
etio.info[[1]]$etio.numPi.pL
round(rbind(etio.info[[1]]$etio.numPi.pL,
etio.info[[2]]$etio.numPi.pL), 4)
round(rbind(etio.info[[1]]$etio.mean.pL[, 1],
etio.info[[2]]$etio.mean.pL[, 1]), 4)
